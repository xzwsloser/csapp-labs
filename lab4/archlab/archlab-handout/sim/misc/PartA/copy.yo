0x000:                      |     .pos 0
0x000: 30f40002000000000000 |     irmovq stack,%rsp
0x00a: 804800000000000000   |     call main
0x013: 00                   |     halt
0x018:                      | .align 8
0x018:                      | src:
0x018: 0a00000000000000     |     .quad 0x00a
0x020: b000000000000000     |     .quad 0x0b0
0x028: 000c000000000000     |     .quad 0xc00
0x030:                      | dest:
0x030: 1101000000000000     |     .quad 0x111
0x038: 2202000000000000     |     .quad 0x222
0x040: 3303000000000000     |     .quad 0x333
                            | 
0x048:                      | main:
0x048: 30f71800000000000000 |     irmovq src,%rdi
0x052: 30f63000000000000000 |     irmovq dest,%rsi
0x05c: 30f20300000000000000 |     irmovq $3,%rdx
0x066: 807000000000000000   |     call copy_block
0x06f: 90                   |     ret
0x070:                      | copy_block:
0x070: 6300                 |     xorq %rax,%rax  # result = 0
0x072: a08f                 |     pushq %r8
0x074: a09f                 |     pushq %r9
0x076: a03f                 |     pushq %rbx
0x078: 30f80800000000000000 |     irmovq $8,%r8
0x082: 30f90100000000000000 |     irmovq $1,%r9
0x08c:                      | loop:
0x08c: 6222                 |     andq %rdx,%rdx
0x08e: 73bc00000000000000   |     je loopEnd
0x097: 50370000000000000000 |     mrmovq (%rdi),%rbx
0x0a1: 6087                 |     addq %r8,%rdi
0x0a3: 40360000000000000000 |     rmmovq %rbx,(%rsi)
0x0ad: 6086                 |     addq %r8,%rsi
0x0af: 6330                 |     xorq %rbx,%rax
0x0b1: 6192                 |     subq %r9,%rdx
0x0b3: 708c00000000000000   |     jmp loop
0x0bc:                      | loopEnd:
0x0bc: b03f                 |     popq %rbx
0x0be: b09f                 |     popq %r9
0x0c0: b08f                 |     popq %r8
0x0c2: 90                   |     ret
                            | 
0x200:                      |     .pos 0x200
0x200:                      | stack:
